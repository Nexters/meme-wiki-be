x-default-timezone: &default-timezone
  TZ: Asia/Seoul

services:
  # MySQL 데이터베이스
  mysql:
    image: mysql:8.0
    container_name: meme-wiki-mysql
    restart: always
    environment:
      <<: *default-timezone
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    ports:
      - "3306:3306"

  # 메인 애플리케이션
  app:
    image: ${NCP_REGISTRY_URL}/meme-wiki-be:latest
    container_name: meme-wiki-be
    restart: always
    ports:
      - "8080:8080"
    environment:
      <<: *default-timezone
      SPRING_PROFILES_ACTIVE: prod
      DATABASE_HOST: mysql
      DATABASE_NAME: ${MYSQL_DATABASE}
      DATABASE_USER: ${MYSQL_USER}
      DATABASE_PASSWORD: ${MYSQL_PASSWORD}
      CLOUDFLARE_R2_ACCESS_KEY_ID: ${CLOUDFLARE_R2_ACCESS_KEY_ID}
      CLOUDFLARE_R2_SECRET_ACCESS_KEY: ${CLOUDFLARE_R2_SECRET_ACCESS_KEY}
      CLOUDFLARE_R2_ENDPOINT: ${CLOUDFLARE_R2_ENDPOINT}
      CLOUDFLARE_R2_BUCKET_NAME: ${CLOUDFLARE_R2_BUCKET_NAME}
      ADMIN_USERNAME: ${ADMIN_USERNAME}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      CLOVA_API_KEY: ${CLOVA_API_KEY}
      GOOGLE_GENAI_API_KEY: ${GOOGLE_GENAI_API_KEY}
      FCM_SERVICE_ACCOUNT_KEY_PATH: file:/app/config/fcm-service-account.json
      NAVER_AI_API_KEY: ${NAVER_AI_API_KEY}
      PINECONE_API_KEY: ${PINECONE_API_KEY}
      PINECONE_INDEX_NAME: ${PINECONE_INDEX_NAME}
      PINECONE_ENVIRONMENT: ${PINECONE_ENVIRONMENT}
    volumes:
      - /root/logs:/app/logs
      - /root/config/fcm-service-account.json:/app/config/fcm-service-account.json:ro
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  # Watchtower - 자동 이미지 업데이트
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.docker/config.json:/config.json:ro
    environment:
      <<: *default-timezone
      WATCHTOWER_POLL_INTERVAL: 300
      WATCHTOWER_CLEANUP: true
      WATCHTOWER_INCLUDE_STOPPED: true
      WATCHTOWER_REVIVE_STOPPED: false
      WATCHTOWER_LABEL_ENABLE: true
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  mysql_data:
    driver: local

networks:
  app-network:
    driver: bridge
